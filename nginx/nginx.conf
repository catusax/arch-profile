#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include            mime.types;
    default_type       application/octet-stream;

    charset            UTF-8;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;

    keepalive_timeout  60;

    #... ...#

    gzip               on;
    gzip_vary          on;

    gzip_comp_level    6;
    gzip_buffers       16 8k;

    gzip_min_length    1000;
    gzip_proxied       any;
    gzip_disable       "msie6";

    gzip_http_version  1.0;

    gzip_types         text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

    # 如果编译时添加了 ngx_brotli 模块，需要增加 brotli 相关配置
    brotli             on;
    brotli_comp_level  6;
    brotli_types       text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;


    server {
        listen       80;
        listen [::]:80;
        server_name  coolrc.me www.coolrc.me;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

         location /.well-known/acme-challenge {
           alias /srv/www/dehydrated;
         }

         location / {
#    add_header               Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        rewrite       ^/(.*)$ https://coolrc.me/$1 permanent;
        }


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    server {
    listen              [::]:443;
    listen              443 ssl  http2 spdy fastopen=3 reuseport;
#    listen               [::]:443
#add_header               Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    # 如果你使用了 Cloudflare 的 HTTP/2 + SPDY 补丁，记得加上 spdy
    # listen               443 ssl http2 spdy fastopen=3 reuseport;

    server_name          www.coolrc.me coolrc.me;
    server_tokens        off;

    #include              /root/www/nginx_conf/ip.blacklist;

    # 中间证书 + 站点证书
    ssl_certificate      /srv/certs/coolrc.me/fullchain.pem;

    # 创建 CSR 文件时用的密钥
    ssl_certificate_key  /srv/certs/coolrc.me/privkey.pem;

    # openssl dhparam -out dhparams.pem 2048
    # https://weakdh.org/sysadmin.html
    ssl_dhparam          /srv/certs/coolrc.me/dhparams.pem;

    # https://github.com/cloudflare/sslconfig/blob/master/conf
    # ssl_ciphers                EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    #ssl_ciphers                EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    # 如果启用了 RSA + ECDSA 双证书，Cipher Suite 可以参考以下配置：
    # ssl_ciphers              EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;

    ssl_ciphers [TLS13+AESGCM+AES128|TLS13+CHACHA20]:TLS13+AESGCM+AES256:[EECDH+ECDSA+AESGCM+AES128|EECDH+ECDSA+CHACHA20]:EECDH+ECDSA+AESGCM+AES256:EECDH+ECDSA+AES128+SHA:EECDH+ECDSA+AES256+SHA:[EECDH+aRSA+AESGCM+AES128|EECDH+aRSA+CHACHA20]:EECDH+aRSA+AESGCM+AES256:EECDH+aRSA+AES128+SHA:EECDH+aRSA+AES256+SHA:RSA+AES128+SHA:RSA+AES256+SHA;

    ssl_prefer_server_ciphers  on;

    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    ssl_session_cache          shared:SSL:50m;
    ssl_session_timeout        1d;

    ssl_session_tickets        on;

    # openssl rand 48 > session_ticket.key
    # 单机部署可以不指定 ssl_session_ticket_key
    ssl_session_ticket_key     /srv/certs/coolrc.me/session_ticket.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    ssl_stapling               on;
    ssl_stapling_verify        on;

    # 根证书 + 中间证书
    # https://imququ.com/post/why-can-not-turn-on-ocsp-stapling.html
    ssl_trusted_certificate    /srv/certs/full_chained.pem;

    resolver                   8.8.4.4 valid=300s;
    resolver_timeout           10s;
#    access_log                 /root/www/nginx_log/imququ_com.log;

    if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$ ) {
        return           444;
    }

         location /.well-known/acme-challenge {
           alias /var/www/dehydrated;
         }

    #重定向到coolrc.me
    if ($host = 'www.coolrc.me' ) {
        rewrite          ^/(.*)$  https://coolrc.me/$1 permanent;
    }
location /download {
    alias /root/download;
}


    location / {
            add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
            proxy_pass http://coolrc136.github.io; #这里使用https会出问题
            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header referer "http://coolrc136.github.io$request_uri";
            more_clear_headers "Server";
            more_clear_headers "X-GitHub-Request-Id";
            more_clear_headers "Last-Modified";
            more_clear_headers "Via";
            more_clear_headers "X-Served-By";
    }
}

}
